apiVersion: v1
kind: Namespace
metadata:
  name: dexter
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: postgresql-kvname # needs to be unique per namespace
  namespace: dexter
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    clientID: "0e58f5ba-4137-4d98-a2db-e243f44e2d12" # Setting this to use workload identity
    keyvaultName: "dexterkeyvault"       # Set to the name of your key vault
    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: username             # Set to the name of your secret
          objectType: secret             # object types: secret, key, or cert
          objectVersion: ""                # [OPTIONAL] object versions, default to latest if empty
        - |
          objectName: password             # Set to the name of your key
          objectType: secret
          objectVersion: ""
    tenantId: "8a0fce19-3824-4678-8769-b6c8e37a33ff"        # The tenant ID of the key vault
  secretObjects:                              # [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects
  - data:
    - key: USERNAME                           # data field to populate
      objectName: username                    # name of the mounted content to sync; this could be the object name or the object alias
    - key: PASSWORD                           # data field to populate
      objectName: password                    # name of the mounted content to sync; this could be the object name or the object alias
    secretName: userpass                     # name of the Kubernetes secret object
    type: Opaque
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    azure.workload.identity/client-id: "0e58f5ba-4137-4d98-a2db-e243f44e2d12"
  name: dexter-sa
  namespace: dexter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgreqs-pod-kv
  namespace: dexter
  labels:
    azure.workload.identity/use: "true"
spec:
  selector:
    matchLabels:
      app: PostgreSQL
  replicas: 1
  template:
    metadata:
      labels:
        app: PostgreSQL
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: "dexter-sa"
      containers:
      - name: postgresql
        image: postgres:14
        volumeMounts:
        - name: postgresql-store
          mountPath: "/mederma"
          readOnly: true
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: userpass
              key: USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: userpass
              key: PASSWORD
      volumes:
      - name: postgresql-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "postgresql-kvname"
---
apiVersion: v1
kind: Service
metadata:
  name: dexter-service
  namespace: dexter
spec:
  selector:
    azure.workload.identity/use: "true"
  type: LoadBalancer
  ports:
  - targetPort: 5432
    port: 5432
